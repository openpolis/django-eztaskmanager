name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-check:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: ['3.10', 3.11, 3.12]

    steps:
      - uses: actions/checkout@main
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 demoproject --exclude demoproject/static --exclude demoproject/migrations,demoproject/tests --count --ignore=D100,D104,D105,D106,D107  --max-line-length=120 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 --exclude demoproject/static --exclude demoproject/migrations,demoproject/tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10', 3.11, 3.12]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Print environment variables
      run: echo "PYTHON_LOCATION=$PYTHON_LOCATION"
    - name: Install dependencies from pyproject.toml
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Activate virtual environment
      run: source ${{ env.pythonLocation }}/bin/activate
    - name: Check installed packages
      run: pip list
    - name: Test with Django's test framework
      run: python demoproject/manage.py test
      
