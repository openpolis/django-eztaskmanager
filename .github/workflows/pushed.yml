name: on push test and upload to PyPITest

on: push

jobs:
  lint-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 demoproject --exclude demoproject/static --exclude demoproject/migrations,demoproject/tests --count --ignore=D100,D104,D105,D106,D107  --max-line-length=120 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 --exclude demoproject/static --exclude demoproject/migrations,demoproject/tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-dj4:
    needs: lint-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies from pyproject.toml
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Test with Django's test framework
        run: python demoproject/manage.py test

  test-dj3:
    needs: lint-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies from pyproject.toml
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Test with Django's test framework
        run: python demoproject/manage.py test
