name: on push lint and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-check:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]

    steps:
      - uses: actions/checkout@main
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 demoproject --exclude demoproject/static --exclude demoproject/migrations,demoproject/tests --count --ignore=D100,D104,D105,D106,D107  --max-line-length=120 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 --exclude demoproject/static --exclude demoproject/migrations,demoproject/tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


  dj5:
    needs: lint-check
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10', 3.11, 3.12]

    steps:
    - uses: actions/checkout@main
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install just the right package for testing
      run: |
        python -m pip install --upgrade pip
        pip install django==5 pytz django-rq rq-scheduler
    - name: Run tests
      run: |
        rm -rf demoproject/staticfiles/*
        python demoproject/manage.py test

  dj4:
    needs: lint-check
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, '3.10', 3.11, 3.12]

    steps:
    - uses: actions/checkout@main
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install just the right package for testing
      run: |
        python -m pip install --upgrade pip
        pip install django==4.2 pytz django-rq rq-scheduler
    - name: Run tests
      run: |
        rm -rf demoproject/staticfiles/*
        python demoproject/manage.py test

#  dj32:
#    needs: lint-check
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.9, '3.10', 3.11, 3.12]
#
#    steps:
#    - uses: actions/checkout@main
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@main
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies from pyproject.toml
#      run: |
#        python -m pip install --upgrade pip
#        pip install poetry
#        poetry lock
#        poetry install
#    - name: Test with Django 3.2
#      run: |
#        rm -rf demoproject/staticfiles/*
#        poetry add django==3.2 --group dev
#        poetry run demoproject/manage.py test
